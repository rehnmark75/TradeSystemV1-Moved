#!/usr/bin/env python3
"""
Test script to verify MACD double calculation fix
"""

def test_macd_optimization():
    """Test that MACD optimization prevents double calculation"""

    print("üß™ Testing MACD double calculation optimization...")

    # Test 1: Check optimization logic in macd_strategy.py
    try:
        with open('/app/forex_scanner/core/strategies/macd_strategy.py', 'r') as f:
            strategy_content = f.read()

        # Check that optimization logic exists
        if "macd_exists = all(col in df.columns for col in required_macd_cols)" in strategy_content:
            print("‚úÖ MACD Strategy: MACD existence check added")
        else:
            print("‚ùå MACD Strategy: Missing MACD existence check")
            return False

        # Check for reuse message
        if "REUSING MACD" in strategy_content:
            print("‚úÖ MACD Strategy: Reuse logic with debug message added")
        else:
            print("‚ùå MACD Strategy: Missing reuse debug message")
            return False

        # Check that standard calculation is conditional
        if "else:" in strategy_content and "ensure_macd_indicators" in strategy_content:
            print("‚úÖ MACD Strategy: Conditional calculation logic added")
        else:
            print("‚ùå MACD Strategy: Missing conditional calculation")
            return False

    except Exception as e:
        print(f"‚ùå Error reading macd_strategy.py: {e}")
        return False

    # Test 2: Verify the current behavior
    print("\nüîç Current MACD Calculation Behavior:")
    print("   1. Data Fetcher: Calculates MACD when config.MACD_EMA_STRATEGY=True")
    print("   2. MACD Strategy: Now checks if MACD indicators already exist")
    print("   3. If exists: Reuses existing MACD (logs 'REUSING MACD')")
    print("   4. If missing: Calculates new MACD (logs 'STANDARD MACD')")

    print("\nüìä Expected Log Messages:")
    print("   - BEFORE FIX: Always see both 'DYNAMIC threshold' + 'STANDARD MACD'")
    print("   - AFTER FIX: See 'DYNAMIC threshold' + 'REUSING MACD' (when indicators exist)")
    print("   - AFTER FIX: See only 'STANDARD MACD' (when indicators missing)")

    print("\nüéØ MACD Double Calculation Fix Summary:")
    print("   1. ‚úÖ Added MACD existence check in strategy")
    print("   2. ‚úÖ Added conditional reuse logic")
    print("   3. ‚úÖ Added debug messages for monitoring")
    print("   4. ‚úÖ Preserved fallback calculation when needed")

    print("\n‚úÖ MACD optimization fix implemented successfully!")
    print("\nüìù Note: Double calculation may still occur when:")
    print("   - config.MACD_EMA_STRATEGY=False (data_fetcher won't add MACD)")
    print("   - Different MACD parameters between data_fetcher and strategy")
    print("   - This is expected behavior - strategy ensures correct parameters")

    return True

if __name__ == "__main__":
    success = test_macd_optimization()
    exit(0 if success else 1)